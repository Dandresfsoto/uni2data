extends ../../../base_auth

block title
    |{{title | upper}}


block side_nav_container

    ul(class="collapsible",data-collapsible="accordion")
        li(class="bold waves-effect waves-light button-menu")

            div(class="collapsible-header active")
                i(class="material-icons") local_activity
                | Breadcrums

            div(class="collapsible-body collapsible-body-blue")
                ul
                    div(class="divider divider-perfil")

                    li(class="bold waves-effect waves-light")
                        a(href="/") Inicio
                            i(class="material-icons icon-sican") keyboard_arrow_right

                    div(class="divider divider-perfil")

                    li(class="bold waves-effect waves-light")
                        a(href="/direccion_financiera/") Direcci칩n financiera
                            i(class="material-icons icon-sican") keyboard_arrow_right

                    div(class="divider divider-perfil")

                    li(class="bold waves-effect waves-light")
                        a(href="/direccion_financiera/consulta_pagos/") Consulta de pagos
                            i(class="material-icons icon-sican") keyboard_arrow_right

                    div(class="divider divider-perfil")

                    li(class="bold waves-effect waves-light")
                        a(href="../../") {{ breadcrum_active | truncatechars:20 }}
                            i(class="material-icons icon-sican") keyboard_arrow_right

                    div(class="divider divider-perfil")

                    li(class="bold waves-effect waves-light breadcrum-active")
                        a(href="#") Consulta: pagos y descue...
                            i(class="material-icons icon-sican") check_circle

                    div(class="divider divider-perfil")



block container_principal
    div(class="container",style="margin-top:50px;")
        div(class="row",style="margin-bottom:0px;")
            form(class="col s12")
                div(class="row",style="margin-bottom:0px;")

                    div(class="input-field col s12 m6 l2 input-dinamic",style="margin-top:0px;")
                        select(id="year")
                            option(value="",disabled,selected) A침o
                        label A침o

                    div(class="input-field col s12 m6 l2 input-dinamic",style="margin-top:0px;")
                        select(id="meses")
                            option(value="",disabled,selected) Mes(es)
                        label Mes(es)

                    div(class="input-field col s12 m6 l3 input-dinamic",style="margin-top:0px;")
                        select(id="estado")
                            option(value="",disabled,selected) Estado(s) de pagos
                            option(value="0") Todos
                            option(value="1") Creados
                            option(value="2") Reportados
                            option(value="3") En pagaduria
                            option(value="4") Exitosos
                            option(value="5") Rechazados
                            option(value="6") Enviados a otro banco
                        label Estado(s) de pagos

                    div(class="input-field col s12 m6 l5 input-dinamic",style="margin-top:0px;")
                        select(id="informacion")
                            option(value="0") Pagos y descuentos
                            option(value="1") Solo pagos
                            option(value="2") Solo descuentos
                        label Informaci칩n

        div(class="chart-container",style="position: relative; height:60vh;")
            canvas(id="myChart",style="margin-top:0px;")

block body_script_auth
    script.
        $(document).ready(function () {

            var years = JSON.parse('{{ years | escapejs }}')

            initial_data(years);


            Chart.pluginService.register({
                beforeRender: function (chart) {
                    if (chart.config.options.showAllTooltips) {
                        // create an array of tooltips
                        // we can't use the chart tooltip because there is only one tooltip per chart
                        chart.pluginTooltips = [];
                        chart.config.data.datasets.forEach(function (dataset, i) {
                            chart.getDatasetMeta(i).data.forEach(function (sector, j) {
                                chart.pluginTooltips.push(new Chart.Tooltip({
                                    _chart: chart.chart,
                                    _chartInstance: chart,
                                    _data: chart.data,
                                    _options: chart.options.tooltips,
                                    _active: [sector]
                                }, chart));
                            });
                        });

                        // turn off normal tooltips
                        chart.options.tooltips.enabled = false;
                    }
                },
                afterDraw: function (chart, easing) {
                    if (chart.config.options.showAllTooltips) {
                        // we don't want the permanent tooltips to animate, so don't do anything till the animation runs atleast once
                        if (!chart.allTooltipsOnce) {
                            if (easing !== 1)
                                return;
                            chart.allTooltipsOnce = true;
                        }

                        // turn on tooltips
                        chart.options.tooltips.enabled = true;
                        Chart.helpers.each(chart.pluginTooltips, function (tooltip) {
                            tooltip.initialize();
                            tooltip.update();
                            // we don't actually need this since we are not animating tooltips
                            tooltip.pivot();
                            tooltip.transition(easing).draw();
                        });
                        chart.options.tooltips.enabled = false;
                    }
                }
            });


            var ctx = document.getElementById("myChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'horizontalBar',
                data: {},
                options: {
                    responsive: true,
                    scales: {
                        yAxes: [{
                            stacked: true,
                        }],
                        xAxes: [{
                            stacked: true,
                            ticks: {
                                beginAtZero: true,
                                callback: function (value, index, values) {
                                    if (parseInt(value) >= 1000) {
                                        return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    } else {
                                        return '$' + value;
                                    }
                                }
                            }
                        }],
                    },
                    tooltips: {
                        enabled: true,
                        mode: 'index',
                        callbacks: {
                            title: function (tooltipItem, data) {
                                var valor = 0;
                                for(i=0;i<tooltipItem.length;i++){
                                    valor += tooltipItem[i].xLabel;
                                }
                                return "Total: $" + valor.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            },
                            label: function (tooltipItems, data) {
                                return "$" + tooltipItems.xLabel.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            }
                        }
                    }
                }
            });

            draw_chart();

            $("#year").change(function () {
                var value = $("#year").val();
                data_meses(value,years);
                draw_chart();
            });

            $("#meses").change(function () {
                draw_chart();
            });

            $("#estado").change(function () {
                draw_chart();
            });

            $("#informacion").change(function () {
                draw_chart();
            });

            function draw_chart() {

                var year = $("#year").val();
                var meses = $("#meses").val();
                var informacion = $("#informacion").val();
                var estado = $("#estado").val();

                $.ajax({
                    type: "GET",
                    url: "/rest/v1.0/direccion_financiera/terceros/pagos/{{ pk_str }}/dinamica/pagos/?year=" + year + "&meses=" + meses + "&informacion=" + informacion + "&estado=" + estado,
                    cache: false,
                    success: function (data) {
                        myChart.data = data.data;
                        myChart.options.title = data.options.title;
                        myChart.update();
                    }
                });
            }


            function initial_data(years) {

                var years_list = []

                for (var key in years) {
                    years_list.push(key);
                    $('#year').append($('<option>', {
                        value: key,
                        text: key
                    }));
                }

                var maximo = Math.max.apply(Math, years_list);
                $('#year').val(maximo);

                data_meses(maximo, years);

            }

            function data_meses(maximo, years) {

                var meses = {
                    1: 'Enero',
                    2: 'Febrero',
                    3: 'Marzo',
                    4: 'Abril',
                    5: 'Mayo',
                    6: 'Junio',
                    7: 'Julio',
                    8: 'Agosto',
                    9: 'Septiembre',
                    10: 'Octubre',
                    11: 'Noviembre',
                    12: 'Diciembre'
                }

                $("#meses").empty();
                $('#meses').append($('<option>', {
                    value: "0",
                    text: "Todos"
                }));

                var opciones = years[maximo];

                for (i = 0; i < opciones.length; i++) {

                    var value = opciones[i];
                    var text = meses[opciones[i]];

                    $('#meses').append($('<option>', {
                        value: value,
                        text: text
                    }));
                }

                $('select').material_select();

            }

        });